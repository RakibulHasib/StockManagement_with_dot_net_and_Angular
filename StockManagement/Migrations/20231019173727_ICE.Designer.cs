// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockManagement.Contexts;

#nullable disable

namespace StockManagement.Migrations
{
    [DbContext(typeof(StockDBContext))]
    [Migration("20231019173727_ICE")]
    partial class ICE
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StockManagement.Entities.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CompanyId");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("StockManagement.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex(new[] { "CompanyId" }, "IX_products_CompanyId");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("StockManagement.Entities.RoleAssagin", b =>
                {
                    b.Property<int>("RoleAssaginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleAssaginId"), 1L, 1);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RoleAssaginId");

                    b.ToTable("RoleAssagin", (string)null);
                });

            modelBuilder.Entity("StockManagement.Entities.RoleMaster", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("RoleMaster", (string)null);
                });

            modelBuilder.Entity("StockManagement.Entities.SalesDistribute", b =>
                {
                    b.Property<long>("SalesDistributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SalesDistributeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SalesDistributeId"), 1L, 1);

                    b.Property<string>("ConcernPerson")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalReceive")
                        .HasColumnType("int");

                    b.Property<int>("TotalReturn")
                        .HasColumnType("int");

                    b.Property<int>("TotalSales")
                        .HasColumnType("int");

                    b.HasKey("SalesDistributeId");

                    b.ToTable("SalesDistribute", (string)null);
                });

            modelBuilder.Entity("StockManagement.Entities.SalesDistributeDetail", b =>
                {
                    b.Property<Guid>("SalesDistributeDetailsId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SalesDistributeDetailsID");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ReceiveQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ReturnQuantity")
                        .HasColumnType("int");

                    b.Property<long>("SalesDistributeId")
                        .HasColumnType("bigint")
                        .HasColumnName("SalesDistributeID");

                    b.Property<int>("SalesQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalSalesPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SalesDistributeDetailsId");

                    b.HasIndex("SalesDistributeId");

                    b.ToTable("SalesDistributeDetails");
                });

            modelBuilder.Entity("StockManagement.Entities.Stock", b =>
                {
                    b.Property<long>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("StockID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StockId"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("GrandTotal")
                        .HasColumnType("int");

                    b.Property<decimal>("GrandTotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("TotalDumping")
                        .HasColumnType("int");

                    b.Property<int>("TotalEja")
                        .HasColumnType("int");

                    b.Property<int>("TotalNewProduct")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalReceive")
                        .HasColumnType("int");

                    b.Property<int>("TotalRemaining")
                        .HasColumnType("int");

                    b.Property<int>("TotalSalesQuantity")
                        .HasColumnType("int");

                    b.HasKey("StockId");

                    b.ToTable("Stock", (string)null);
                });

            modelBuilder.Entity("StockManagement.Entities.StockDetail", b =>
                {
                    b.Property<Guid>("StockDetailsId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockDetailsID");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Dumping")
                        .HasColumnType("int");

                    b.Property<int?>("Eja")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Receive")
                        .HasColumnType("int");

                    b.Property<int?>("Remaining")
                        .HasColumnType("int");

                    b.Property<int?>("RestockQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("SalesQuantity")
                        .HasColumnType("int");

                    b.Property<long>("StockId")
                        .HasColumnType("bigint")
                        .HasColumnName("StockID");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("StockDetailsId")
                        .HasName("PK_StockDetails_1");

                    b.HasIndex("ProductId");

                    b.HasIndex("StockId");

                    b.ToTable("StockDetails");
                });

            modelBuilder.Entity("StockManagement.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StockManagement.Entities.Product", b =>
                {
                    b.HasOne("StockManagement.Entities.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("StockManagement.Entities.SalesDistributeDetail", b =>
                {
                    b.HasOne("StockManagement.Entities.SalesDistribute", "SalesDistribute")
                        .WithMany("SalesDistributeDetails")
                        .HasForeignKey("SalesDistributeId");

                    b.Navigation("SalesDistribute");
                });

            modelBuilder.Entity("StockManagement.Entities.StockDetail", b =>
                {
                    b.HasOne("StockManagement.Entities.Product", "Product")
                        .WithMany("StockDetails")
                        .HasForeignKey("ProductId");

                    b.HasOne("StockManagement.Entities.Stock", "Stock")
                        .WithMany("StockDetails")
                        .HasForeignKey("StockId");

                    b.Navigation("Product");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("StockManagement.Entities.Company", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("StockManagement.Entities.Product", b =>
                {
                    b.Navigation("StockDetails");
                });

            modelBuilder.Entity("StockManagement.Entities.SalesDistribute", b =>
                {
                    b.Navigation("SalesDistributeDetails");
                });

            modelBuilder.Entity("StockManagement.Entities.Stock", b =>
                {
                    b.Navigation("StockDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
