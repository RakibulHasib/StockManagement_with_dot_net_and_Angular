// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockManagement.Model;

#nullable disable

namespace StockManagement.Migrations
{
    [DbContext(typeof(StockDBContext))]
    [Migration("20230709172333_IcecramScript")]
    partial class IcecramScript
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StockManagement.Model.Gari1", b =>
                {
                    b.Property<int>("Gari1Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Gari1Id"), 1L, 1);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Receive")
                        .HasColumnType("int");

                    b.Property<int>("Return")
                        .HasColumnType("int");

                    b.Property<int>("Sales")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Gari1Id");

                    b.HasIndex("ProductId");

                    b.ToTable("gari1");
                });

            modelBuilder.Entity("StockManagement.Model.Gari2", b =>
                {
                    b.Property<int>("Gari2Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Gari2Id"), 1L, 1);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Receive")
                        .HasColumnType("int");

                    b.Property<int>("Return")
                        .HasColumnType("int");

                    b.Property<int>("Sales")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Gari2Id");

                    b.HasIndex("ProductId");

                    b.ToTable("gari2");
                });

            modelBuilder.Entity("StockManagement.Model.Gari3", b =>
                {
                    b.Property<int>("Gari3Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Gari3Id"), 1L, 1);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Receive")
                        .HasColumnType("int");

                    b.Property<int>("Return")
                        .HasColumnType("int");

                    b.Property<int>("Sales")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Gari3Id");

                    b.HasIndex("ProductId");

                    b.ToTable("gari3");
                });

            modelBuilder.Entity("StockManagement.Model.IglooIceCream", b =>
                {
                    b.Property<int>("IglooIceCreamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IglooIceCreamId"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Dumping")
                        .HasColumnType("int");

                    b.Property<int?>("Eja")
                        .HasColumnType("int");

                    b.Property<int?>("NewProduct")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Receive")
                        .HasColumnType("int");

                    b.Property<int?>("Remaining")
                        .HasColumnType("int");

                    b.Property<int?>("SalesQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IglooIceCreamId");

                    b.ToTable("iglooIceCreams");
                });

            modelBuilder.Entity("StockManagement.Model.KaziFarmFood", b =>
                {
                    b.Property<int>("KaziFarmFoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KaziFarmFoodId"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Dumping")
                        .HasColumnType("int");

                    b.Property<int?>("Eja")
                        .HasColumnType("int");

                    b.Property<int?>("NewProduct")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Receive")
                        .HasColumnType("int");

                    b.Property<int?>("Remaining")
                        .HasColumnType("int");

                    b.Property<int?>("SalesQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("KaziFarmFoodId");

                    b.ToTable("kaziFarmFoods");
                });

            modelBuilder.Entity("StockManagement.Model.LovelloIceCream", b =>
                {
                    b.Property<int>("LovelloIceCreamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LovelloIceCreamId"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Dumping")
                        .HasColumnType("int");

                    b.Property<int?>("Eja")
                        .HasColumnType("int");

                    b.Property<int?>("NewProduct")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Receive")
                        .HasColumnType("int");

                    b.Property<int?>("Remaining")
                        .HasColumnType("int");

                    b.Property<int?>("SalesQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LovelloIceCreamId");

                    b.ToTable("lovelloIceCreams");
                });

            modelBuilder.Entity("StockManagement.Model.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("StockManagement.Model.SavoyIceCream", b =>
                {
                    b.Property<int>("SavoyIceCreamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SavoyIceCreamId"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Dumping")
                        .HasColumnType("int");

                    b.Property<int?>("Eja")
                        .HasColumnType("int");

                    b.Property<int?>("NewProduct")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Receive")
                        .HasColumnType("int");

                    b.Property<int?>("Remaining")
                        .HasColumnType("int");

                    b.Property<int?>("SalesQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SavoyIceCreamId");

                    b.ToTable("savoyIceCreams");
                });

            modelBuilder.Entity("StockManagement.Model.ZaNZeeIceCream", b =>
                {
                    b.Property<int>("ZaNZeeIceCreamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZaNZeeIceCreamId"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Dumping")
                        .HasColumnType("int");

                    b.Property<int?>("Eja")
                        .HasColumnType("int");

                    b.Property<int?>("NewProduct")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Receive")
                        .HasColumnType("int");

                    b.Property<int?>("Remaining")
                        .HasColumnType("int");

                    b.Property<int?>("SalesQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ZaNZeeIceCreamId");

                    b.ToTable("zaNZeeIceCreams");
                });

            modelBuilder.Entity("StockManagement.Model.Gari1", b =>
                {
                    b.HasOne("StockManagement.Model.Product", "Product")
                        .WithMany("Gari1s")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StockManagement.Model.Gari2", b =>
                {
                    b.HasOne("StockManagement.Model.Product", "Product")
                        .WithMany("Gari2s")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StockManagement.Model.Gari3", b =>
                {
                    b.HasOne("StockManagement.Model.Product", "Product")
                        .WithMany("Gari3s")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StockManagement.Model.Product", b =>
                {
                    b.Navigation("Gari1s");

                    b.Navigation("Gari2s");

                    b.Navigation("Gari3s");
                });
#pragma warning restore 612, 618
        }
    }
}
